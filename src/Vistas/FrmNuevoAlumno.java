/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;
import java.awt.Color;
import Camara.MiWebcam;
import Conexion.Conexion;
import Datos.DAlumnos;
import Logica.Lalumnos;
import com.mysql.jdbc.PreparedStatement;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

/**
 *
 * @author USUARIO
 */
public class FrmNuevoAlumno extends javax.swing.JInternalFrame {

    boolean colocarImagen=false;
       public static Conexion cc = new Conexion();
       Connection cn = cc.conectar();
       String nControl;
       boolean validar=true;
       boolean validarCorreo;
       boolean teclado=false;
       File ruta;
       MiWebcam camara=new MiWebcam();
       DAlumnos da=new DAlumnos();
       String planteles[]={"XOYOTITLA","ALAMO","TUXPAN"};
       String modalidad[]={"ESCOLARIZADO","SISTEMA ABIERTO"};       
      int cNoControl=0,contadorCamara=0;
       String patronEmail = "^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@" +
      "[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$";
    /**
     * Creates new form NuevoAlumno
     */
    public FrmNuevoAlumno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblFotoAlumno = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNoControl = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApaterno = new javax.swing.JTextField();
        txtAmaterno = new javax.swing.JTextField();
        txtSemestre = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        comboPlantel = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblValidarEmail = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        comboModalidad = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        btnGuardar1 = new javax.swing.JButton();
        comboCarrera = new javax.swing.JComboBox<>();
        lblCorregirFoto = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Nuevo Alumno");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblFotoAlumno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/vacio.png"))); // NOI18N
        lblFotoAlumno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFotoAlumno.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseDragged(evt);
            }
        });
        lblFotoAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Apellido Paterno:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Apellido Materno:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Semestre:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("No. de Control:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Telefono:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Correo Electronico:");

        txtNoControl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoControlKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoControlKeyTyped(evt);
            }
        });

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        txtApaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApaternoKeyReleased(evt);
            }
        });

        txtAmaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmaternoKeyReleased(evt);
            }
        });

        txtSemestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemestreActionPerformed(evt);
            }
        });
        txtSemestre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSemestreKeyReleased(evt);
            }
        });

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyReleased(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });

        comboPlantel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "XOYOTITLA", "ALAMO", "TUXPAN" }));
        comboPlantel.setSelectedIndex(-1);
        comboPlantel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPlantelItemStateChanged(evt);
            }
        });
        comboPlantel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPlantelActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Plantel:");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblValidarEmail.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblValidarEmail.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Modalidad: ");

        comboModalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ESCOLARIZADO", "SISTEMA ABIERTO" }));
        comboModalidad.setSelectedIndex(-1);
        comboModalidad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboModalidadItemStateChanged(evt);
            }
        });
        comboModalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboModalidadActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Carrera:");

        btnGuardar1.setText("Limpiar");
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        comboCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCarreraActionPerformed(evt);
            }
        });

        lblCorregirFoto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCorregirFoto.setForeground(new java.awt.Color(204, 0, 51));
        lblCorregirFoto.setMaximumSize(new java.awt.Dimension(184, 34));
        lblCorregirFoto.setMinimumSize(new java.awt.Dimension(184, 34));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblValidarEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFotoAlumno)
                            .addComponent(lblCorregirFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtApaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNoControl, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAmaterno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSemestre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(btnGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboModalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboPlantel, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCorregirFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboPlantel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(comboModalidad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAmaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(comboCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblValidarEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnGuardar1)
                    .addComponent(btnCancelar))
                .addGap(94, 94, 94))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lblFotoAlumno)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1237, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 577, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblFotoAlumnoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseDragged

    }//GEN-LAST:event_lblFotoAlumnoMouseDragged

    private void lblFotoAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseClicked
        contadorCamara++;
        ImageIcon iconCamara=new ImageIcon(getClass().getResource("/imagenes/camara.png"));
        String opciones[]={"Busqueda Automática","Subir una Foto","Tomar una Foto"};
        String resp = (String) JOptionPane.showInputDialog(this, "Seleccione una opción:", "Agregar Foto", JOptionPane.DEFAULT_OPTION, iconCamara, opciones, opciones[0]);
        switch (resp) {
            case "Tomar una Foto":
            nControl=txtNoControl.getText();
            if(nControl.equals("")){
                JOptionPane.showMessageDialog(this,"Por favor termine de ingresar sus datos¡","Formulario Incompleto",JOptionPane.ERROR_MESSAGE);
            }else{
                String direccion="C:\\BIBIOTEC\\FotoAlumnos\\"+nControl+".jpg";
                ruta=new File(direccion);
                camara.setNumeroControl(nControl);
                SwingUtilities.invokeLater(camara);
                if(camara.isValidar()){
                    colocarFoto(direccion);
                }
                lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
            }      break;
            case "Subir una Foto":
            int resultado;

            FileNameExtensionFilter filtro=new FileNameExtensionFilter("JPG","PNG","GIF","ICO","jpg","png","gif","ico");
            Buscador.JFCImg.setFileFilter(filtro);
            resultado=Buscador.JFCImg.showOpenDialog(null);
            if(JFileChooser.APPROVE_OPTION==resultado){
                ruta=Buscador.JFCImg.getSelectedFile();

                try{
                    ImageIcon imgIcon=new ImageIcon(ruta.toString());
                    Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblFotoAlumno.getWidth(),lblFotoAlumno.getHeight(),Image.SCALE_DEFAULT));
                    lblFotoAlumno.setIcon(icono);
                    camara.setValidar(true);
                    lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null,"Error al Abrir Imagen");
                }

            }      break;
            case "Busqueda Automática":
            nControl=txtNoControl.getText();
            if(nControl.equals("")){
                JOptionPane.showMessageDialog(this,"Por favor termine de ingresar sus datos¡","Formulario Incompleto",JOptionPane.ERROR_MESSAGE);
            }else{
                try{
                    String direccion="C:\\BIBIOTEC\\FotoAlumnos\\"+nControl+".jpg";
                    ruta=new File(direccion);
                    if(ruta.exists()){
                        ImageIcon imgIcon=new ImageIcon(direccion);
                        Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblFotoAlumno.getWidth(),lblFotoAlumno.getHeight(), Image.SCALE_DEFAULT));
                        lblFotoAlumno.setIcon(icono);
                        camara.setValidar(true);
                        lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
                    }else{
                        JOptionPane.showMessageDialog(null,"Imagen no encontrada","ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                }catch(HeadlessException e){
                    JOptionPane.showMessageDialog(null,"Error al Abrir Imagen","ERROR",JOptionPane.ERROR_MESSAGE);
                }

            }      break;
            default:
            break;
        }
    }//GEN-LAST:event_lblFotoAlumnoMouseClicked

    private void lblFotoAlumnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseEntered

        efectoSubirFotoAlumno();
    }//GEN-LAST:event_lblFotoAlumnoMouseEntered

    private void lblFotoAlumnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseExited
        efectoVolverFotoAlumno();
    }//GEN-LAST:event_lblFotoAlumnoMouseExited

    private void txtNoControlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoControlKeyReleased
        int k=(int) evt.getKeyChar();

        if(k<32 || k==65535 || k==8){
            //Nada
        }
        else if(k==32){
            JOptionPane.showMessageDialog(null,"No se permiten Espacios en este Campo","Error",JOptionPane.ERROR_MESSAGE);
            txtNoControl.setText("");
            cNoControl=0;
        }

        else if(k>32 && k < 48 || k>57 && k<65 || k>90 && k< 97 || k>122 && k<164 || k>165){

            JOptionPane.showMessageDialog(null,"No se permiten Estos Caracteres en este Campo \n (*,@,/,_,. ...etc.)","Error",JOptionPane.ERROR_MESSAGE);
            txtNoControl.setText("");
            cNoControl=0;
        }else{

            cNoControl=cNoControl+1;
            if(cNoControl >8){

                JOptionPane.showMessageDialog(null,"Numero de control no debe superar los 8 caracteres","Error",JOptionPane.ERROR_MESSAGE);
                txtNoControl.setText("");
                cNoControl=0;
            }
        }
    }//GEN-LAST:event_txtNoControlKeyReleased

    private void txtNoControlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoControlKeyTyped

        char keyChar = evt.getKeyChar();
        if (Character.isLowerCase(keyChar)) {
            evt.setKeyChar(Character.toUpperCase(keyChar));

        }
    }//GEN-LAST:event_txtNoControlKeyTyped

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtNombre.setText("");

        }

        if(txtNombre.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtNombre.setText("");
        }
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtApaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApaternoKeyReleased
        int k=(int) evt.getKeyChar();
        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtApaterno.setText("");

        }

        if(txtApaterno.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtApaterno.setText("");
        }
    }//GEN-LAST:event_txtApaternoKeyReleased

    private void txtAmaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmaternoKeyReleased

        int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtAmaterno.setText("");

        }

        if(txtAmaterno.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtAmaterno.setText("");
        }
    }//GEN-LAST:event_txtAmaternoKeyReleased

    private void txtSemestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemestreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemestreActionPerformed

    private void txtSemestreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSemestreKeyReleased
        int k=evt.getKeyChar();
        if(k>0 && k<7 || k>10 && k<48 || k>57 && k<255){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Solo se pueden ingresar numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtSemestre.setText("");
        }else{
            int semestre=Integer.parseInt(txtSemestre.getText());
            if(semestre < 1 || semestre > 13){
                JOptionPane.showMessageDialog(null,"Semestre Invalido","Error",JOptionPane.ERROR_MESSAGE);
                txtSemestre.setText("");
            }
        }
    }//GEN-LAST:event_txtSemestreKeyReleased

    private void txtTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyReleased
        int k=(int) evt.getKeyChar();
        if(k>0 && k<7 || k>10 && k<48 || k>57 && k<255){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Solo se pueden ingresar numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtTelefono.setText("");

        }
        if(txtTelefono.getText().length()>10){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(10)","Error",JOptionPane.ERROR_MESSAGE);
            txtTelefono.setText("");

        }
    }//GEN-LAST:event_txtTelefonoKeyReleased

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        Pattern patron = Pattern.compile(patronEmail);
        String email=txtEmail.getText();
        Matcher matcher = patron.matcher(email);

        if(!email.equals("")){

            if (matcher.matches()) {
                lblValidarEmail.setForeground(Color.GREEN);
                lblValidarEmail.setText("Correo Valido");
            }
            else {
                lblValidarEmail.setForeground(Color.RED);
                lblValidarEmail.setText("Ingrese un correo Valido");

            }

        }else{
            lblValidarEmail.setText("");
        }
    }//GEN-LAST:event_txtEmailKeyReleased

    private void comboPlantelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPlantelItemStateChanged
        if(comboModalidad.getSelectedIndex()!=-1){
            String plantel=comboPlantel.getSelectedItem().toString();
            String modalidad3=comboModalidad.getSelectedItem().toString();
            obtenerCarreras(plantel,modalidad3);
        }
    }//GEN-LAST:event_comboPlantelItemStateChanged

    private void comboPlantelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPlantelActionPerformed

    }//GEN-LAST:event_comboPlantelActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if(validarCampos()==0){
            String plantel=comboPlantel.getSelectedItem().toString();
            String modalidad2=comboModalidad.getSelectedItem().toString();
            String carrera=comboCarrera.getSelectedItem().toString();
            int carreraId=seleccionCarrera(plantel,modalidad2,carrera);
            System.out.println(carreraId);
            nControl=txtNoControl.getText();
            int semestre=Integer.parseInt(txtSemestre.getText());
            Lalumnos u=new Lalumnos();
            u.setAlumnoId(generarIdAlumno());
            u.setNoControl(nControl);
            u.setNombre(txtNombre.getText());
            u.setaPaterno(txtApaterno.getText());
            u.setaMaterno(txtAmaterno.getText());
            u.setSemestre(semestre);
            try {
                // TODO add your handling code here:
                BufferedImage img = ImageIO.read(new File(ruta.toString()));
                String image_string = encodeToString(img);
                u.setFoto(image_string);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al Cargar Foto","ERROR",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmAltaBajaAlumnos.class.getName()).log(Level.SEVERE, null, ex);
            }

            u.setTelefono(txtTelefono.getText());
            u.setEmail(txtEmail.getText());
            u.setCarreraId(carreraId);
            u.setEstado("ALTA");
            boolean r=da.agregarAlumno(u);
           
            if(r){
                limpiar();

            }
        }
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void comboModalidadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboModalidadItemStateChanged
        if(comboPlantel.getSelectedIndex()!=-1){
            try{
            String plantel=comboPlantel.getSelectedItem().toString();
            String modalidad1=comboModalidad.getSelectedItem().toString();
            obtenerCarreras(plantel,modalidad1);
            }catch(Exception e){
            }
        }
    }//GEN-LAST:event_comboModalidadItemStateChanged

    private void comboModalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboModalidadActionPerformed

    }//GEN-LAST:event_comboModalidadActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        limpiar();
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void comboCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCarreraActionPerformed

    }//GEN-LAST:event_comboCarreraActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

 public int validarCampos(){
     int contador=0;
    try{
    String noControl=txtNoControl.getText();
    String sql="SELECT estadoAlumno FROM alumno WHERE no_control="+'"'+noControl+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            if(rst.next()){
                String estado=rst.getString("estadoAlumno");
               if(!estado.equals("BAJA")){
                JOptionPane.showMessageDialog(null, "El Alumno ya se encuentra Registrado!", "ERROR", JOptionPane.ERROR_MESSAGE);
            limpiar();
            contador++;
    } else{
                
    if(txtNoControl.getText().trim().compareTo("")==0){
    
    JOptionPane.showMessageDialog(null, "Ingrese un Numero de Control Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    
               
            }
            
    if(txtNombre.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Nombre esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    if(txtApaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Paterno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    if(txtAmaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Materno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(txtSemestre.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "Ingrese un Semestre Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    
    
    if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(comboModalidad.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado una Modalidad", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(comboCarrera.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado una Carrera", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }                    
    }
    }catch(SQLException e){
    JOptionPane.showMessageDialog(null, "Error al Validar Existencia del Alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }   
    return contador;
    }
    public static String encodeToString(BufferedImage image) {
        String imageString = null;
        ByteArrayOutputStream bos = new ByteArrayOutputStream();

        try {
            ImageIO.write(image, "jpg", bos);
            byte[] imageBytes = bos.toByteArray();

            BASE64Encoder encoder = new BASE64Encoder();
            imageString = encoder.encode(imageBytes);

            bos.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null,"Error al convertir imagen a String "+e);
        }
        return imageString;
    }
    
    public String generarIdAlumno(){
    String idAlumno;
    Calendar fecha=Calendar.getInstance();
    int a=fecha.get(Calendar.YEAR)-2000,m=fecha.get(Calendar.MONTH)+1,d=fecha.get(Calendar.DATE),h=fecha.get(Calendar.HOUR),
    mn=fecha.get(Calendar.MINUTE),s=fecha.get(Calendar.SECOND);
    String ano=Integer.toString(a),mes=Integer.toString(m),dia=Integer.toString(d),hora=Integer.toString(h),
    minuto=Integer.toString(mn),segundo=Integer.toString(s);
    if(m<10){
     mes="0"+mes;
    }
    if(d<10){
     dia="0"+dia;   
    }
    if(h<10){
     hora="0"+hora;   
    }
    if(mn<10){
     minuto="0"+minuto;   
    }
    if(s<10){
     segundo="0"+segundo;   
    }
    idAlumno=ano+mes+dia+hora+minuto+segundo;
    return idAlumno;
    }
    
    
    public void limpiar() {
        txtNoControl.setText("");
        txtNombre.setText("");
        txtApaterno.setText("");
        txtAmaterno.setText("");
        txtSemestre.setText("");
        txtTelefono.setText("");
        txtEmail.setText("");
        lblValidarEmail.setText("");
        lblCorregirFoto.setText("");
        camara.setValidar(false);
        efectoVolverFotoAlumno();
        comboCarrera.removeAllItems();
        comboModalidad.setSelectedIndex(-1);
        comboModalidad.setSelectedItem(-1);
        comboPlantel.setSelectedIndex(-1);
        comboPlantel.setSelectedItem(-1);
        txtNoControl.requestFocusInWindow(); 

        
    }
    
    public int obtenerCarreraId(String plantel,String modalidad,String nombreCarrera){
        int carreraId=0;
    try{
            String sql="SELECT carrera_id,estado FROM Carrera WHERE plantel="+'"'+plantel+'"'+" AND modalidad="+'"'+modalidad+'"'+"AND nombre_carrera="+'"'+nombreCarrera+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
           if(rst.next()){
            
            int datos=rst.getInt("carrera_id");
            String estado=rst.getString("estado");
           
            if(!estado.equals("BAJA")){
            carreraId=datos;
            validar=true;
            
            }
            
            
            }else{
           JOptionPane.showMessageDialog(null,"Consulta Invalida","Error",JOptionPane.ERROR_MESSAGE);
           JOptionPane.showMessageDialog(null,"Favor de ingresar una carrera valida","Error",JOptionPane.ERROR_MESSAGE);
           
           validar=false;
           }
    }catch(SQLException e){
    
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de datos","Error",JOptionPane.ERROR_MESSAGE);
        validar=false;
    }
    validar=true;    
    return carreraId;   
     
    }
    
    public int seleccionCarrera(String plantel,String modalidad,String carrera){
        int resultado;
        
        try{
        
        String sql="SELECT carrera_id FROM Carrera WHERE plantel="+'"'+plantel+'"'+" AND modalidad="+'"'+modalidad+'"'+" AND nombre_carrera="+'"'+carrera+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            int carreraId = 0;
            while(rst.next()){
            carreraId=rst.getInt("carrera_id");
            }
          resultado=carreraId;
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de Datos","ERROR",JOptionPane.ERROR_MESSAGE);
         resultado=0;
        }
        return resultado;
    }
    
    public void colocarFoto(String direccion){

    try{                           
                           ruta=new File(direccion);
                           if(ruta.exists()){
                               ImageIcon imgIcon=new ImageIcon(direccion);
                               Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblFotoAlumno.getWidth(),lblFotoAlumno.getHeight(), Image.SCALE_DEFAULT));
                               lblFotoAlumno.setIcon(icono);
                               camara.setValidar(true);
                               lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
                           }else{
                               JOptionPane.showMessageDialog(null,"Imagen no encontrada","ERROR",JOptionPane.ERROR_MESSAGE);
                           }
                       }catch(HeadlessException e){
                           JOptionPane.showMessageDialog(null,"Error al Abrir Imagen","ERROR",JOptionPane.ERROR_MESSAGE);
                       }


}
    public void efectoSubirFotoAlumno(){
        
        if(!camara.isValidar()){
        ImageIcon iconVacio2=new ImageIcon(getClass().getResource("/imagenes/vacio2.png"));
        lblFotoAlumno.setIcon(iconVacio2);
        
        }
    }
    
        
    public void efectoVolverFotoAlumno(){
    
    if(!camara.isValidar()){    
    ImageIcon iconVacio=new ImageIcon(getClass().getResource("/imagenes/vacio.png"));
        lblFotoAlumno.setIcon(iconVacio);
    }
    }
    
    public void obtenerCarreras(String plantel,String modalidad){
             
        
        try{
            
            DefaultComboBoxModel modelo=new DefaultComboBoxModel();  
            String datos[]=new String[2];
            String sql="SELECT nombre_carrera,estado FROM Carrera WHERE plantel="+'"'+plantel+'"'+" AND modalidad="+'"'+modalidad+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            
            while(rst.next()){
            
            datos[0]=rst.getString("nombre_carrera");
            datos[1]=rst.getString("estado");
            
            if(!datos[1].equals("BAJA")){
            String carrera=datos[0];
            modelo.addElement(carrera);
            }
            }
            comboCarrera.setModel(modelo);
            
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de Datos","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JComboBox<String> comboCarrera;
    private javax.swing.JComboBox<String> comboModalidad;
    private javax.swing.JComboBox<String> comboPlantel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCorregirFoto;
    private javax.swing.JLabel lblFotoAlumno;
    private javax.swing.JLabel lblValidarEmail;
    private javax.swing.JTextField txtAmaterno;
    private javax.swing.JTextField txtApaterno;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNoControl;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSemestre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
