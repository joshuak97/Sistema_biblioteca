/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Camara.MiWebcam;
import Conexion.Conexion;
import Datos.DAlumnos;
import Logica.Lalumnos;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.Calendar;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

/**
 *
 * @author USUARIO
 */
public final class FrmAltaBajaAlumnos extends javax.swing.JInternalFrame {
       boolean colocarImagen=false;
       public static Conexion cc = new Conexion();
       Connection cn = cc.conectar();
       String nControl,operacion;
       boolean validar=true;
       boolean validarCorreo;
       boolean teclado=false;
       File ruta;
       MiWebcam camara=new MiWebcam();
       DAlumnos da=new DAlumnos();
       String planteles[]={"XOYOTITLA","ALAMO","TUXPAN"};
       String modalidad[]={"ESCOLARIZADO","SISTEMA ABIERTO"};
       
      int cNoControl=0,contadorCamara=0;
       String patronEmail = "^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@" +
      "[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$";
       /**
     * Creates new form FrmAltaBajaAlumnos
     */
    public FrmAltaBajaAlumnos() {
        
        
        initComponents();
        deshabilitar();
        mostrarAlumnos();
        txtNoControl.requestFocusInWindow(); 
        lblId.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        lblFotoAlumno = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNoControl = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApaterno = new javax.swing.JTextField();
        txtAmaterno = new javax.swing.JTextField();
        txtSemestre = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        comboPlantel = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblValidarEmail = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        comboModalidad = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        btnGuardar1 = new javax.swing.JButton();
        comboCarrera = new javax.swing.JComboBox<>();
        lblCorregirFoto = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblConsultarFoto = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtConsultarNoControl = new javax.swing.JTextField();
        txtConsultarNombre = new javax.swing.JTextField();
        txtConsultarApaterno = new javax.swing.JTextField();
        txtConsultarAmaterno = new javax.swing.JTextField();
        txtConsultarSemestre = new javax.swing.JTextField();
        txtConsultarTelefono = new javax.swing.JTextField();
        txtConsultarCorreo = new javax.swing.JTextField();
        btnGuardarConsultas = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnConsultarCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsultar = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        comboBuscar = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        btnDarBaja = new javax.swing.JButton();
        txtConsultarPlantel = new javax.swing.JTextField();
        txtConsultarModalidad = new javax.swing.JTextField();
        txtConsultarCarrera = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblCorregirFotoConsulta = new javax.swing.JLabel();

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Semestre:");

        setClosable(true);
        setIconifiable(true);
        setTitle("Alta/Baja Alumnos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/alumnos2.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1300, 667));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(1300, 674));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        ImageIcon iconVcio=new ImageIcon(getClass().getResource("/Imagenes/vacio.png"));
        lblFotoAlumno.setIcon(iconVcio); // NOI18N
        lblFotoAlumno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFotoAlumno.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseDragged(evt);
            }
        });
        lblFotoAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblFotoAlumnoMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Apellido Paterno:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Apellido Materno:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Semestre:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("No. de Control:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Telefono:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Correo Electronico:");

        txtNoControl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoControlKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoControlKeyTyped(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        txtApaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApaternoKeyReleased(evt);
            }
        });

        txtAmaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmaternoKeyReleased(evt);
            }
        });

        txtSemestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemestreActionPerformed(evt);
            }
        });
        txtSemestre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSemestreKeyReleased(evt);
            }
        });

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyReleased(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });

        comboPlantel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "XOYOTITLA", "ALAMO", "TUXPAN" }));
        comboPlantel.setSelectedIndex(-1);
        comboPlantel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPlantelItemStateChanged(evt);
            }
        });
        comboPlantel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPlantelActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Plantel:");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblValidarEmail.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblValidarEmail.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Modalidad: ");

        comboModalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ESCOLARIZADO", "SISTEMA ABIERTO" }));
        comboModalidad.setSelectedIndex(-1);
        comboModalidad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboModalidadItemStateChanged(evt);
            }
        });
        comboModalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboModalidadActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Carrera:");

        btnGuardar1.setText("Limpiar");
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        comboCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCarreraActionPerformed(evt);
            }
        });

        lblCorregirFoto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCorregirFoto.setForeground(new java.awt.Color(204, 0, 51));
        lblCorregirFoto.setMaximumSize(new java.awt.Dimension(184, 34));
        lblCorregirFoto.setMinimumSize(new java.awt.Dimension(184, 34));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblValidarEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFotoAlumno)
                            .addComponent(lblCorregirFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtApaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNoControl, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAmaterno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSemestre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(btnGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboModalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboPlantel, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCorregirFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboPlantel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(comboModalidad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAmaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(comboCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblValidarEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnGuardar1)
                    .addComponent(btnCancelar))
                .addGap(94, 94, 94))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lblFotoAlumno)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Alta Alumnos", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        ImageIcon iconVcio2=new ImageIcon(getClass().getResource("/Imagenes/vacio.png"));
        lblConsultarFoto.setIcon(iconVcio2); // NOI18N
        lblConsultarFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConsultarFotoMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("No. de Control:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Nombre:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Apellido Paterno:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Apellido Materno:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Semestre:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Telefono:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Carrera:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Correo electronico:");

        txtConsultarNoControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarNoControlActionPerformed(evt);
            }
        });
        txtConsultarNoControl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConsultarNoControlKeyTyped(evt);
            }
        });

        txtConsultarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarNombreActionPerformed(evt);
            }
        });
        txtConsultarNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultarNombreKeyReleased(evt);
            }
        });

        txtConsultarApaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarApaternoActionPerformed(evt);
            }
        });
        txtConsultarApaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultarApaternoKeyReleased(evt);
            }
        });

        txtConsultarAmaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarAmaternoActionPerformed(evt);
            }
        });
        txtConsultarAmaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultarAmaternoKeyReleased(evt);
            }
        });

        txtConsultarSemestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarSemestreActionPerformed(evt);
            }
        });
        txtConsultarSemestre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultarSemestreKeyReleased(evt);
            }
        });

        txtConsultarTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarTelefonoActionPerformed(evt);
            }
        });
        txtConsultarTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultarTelefonoKeyReleased(evt);
            }
        });

        txtConsultarCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarCorreoActionPerformed(evt);
            }
        });
        txtConsultarCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultarCorreoKeyReleased(evt);
            }
        });

        btnGuardarConsultas.setText("Guardar");
        btnGuardarConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarConsultasActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnConsultarCancelar.setText("Cancelar");
        btnConsultarCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarCancelarActionPerformed(evt);
            }
        });

        tblConsultar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Alumno Id", "No. control", "Nombre", "Telefono", "Correo Electronico", "Semestre", "Ingeniería", "Sistema"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConsultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConsultarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblConsultar);
        ImageIcon iconBuscar=new ImageIcon(getClass().getResource("/Imagenes/buscar.png"));
        jLabel19.setIcon(iconBuscar); // NOI18N

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        comboBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buscar por No.Control:", "Buscar por Id:", "Buscar por Nombre:", "Buscar por A.Parerno:", "Buscar por A.Materno:", "Buscar por Carrera:" }));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Plantel");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Modalidad:");

        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setPreferredSize(new java.awt.Dimension(85, 14));

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnDarBaja.setText("Dar de Baja");
        btnDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaActionPerformed(evt);
            }
        });

        txtConsultarPlantel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarPlantelActionPerformed(evt);
            }
        });

        txtConsultarModalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarModalidadActionPerformed(evt);
            }
        });

        txtConsultarCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarCarreraActionPerformed(evt);
            }
        });

        jLabel1.setMinimumSize(new java.awt.Dimension(351, 20));

        lblCorregirFotoConsulta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCorregirFotoConsulta.setMaximumSize(new java.awt.Dimension(340, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblConsultarFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(lblCorregirFotoConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtConsultarNoControl, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(txtConsultarNombre)
                            .addComponent(txtConsultarApaterno)
                            .addComponent(txtConsultarAmaterno)
                            .addComponent(txtConsultarSemestre))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtConsultarCorreo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                            .addComponent(txtConsultarPlantel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                            .addComponent(txtConsultarTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                            .addComponent(txtConsultarModalidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                            .addComponent(txtConsultarCarrera, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1)
                    .addComponent(lblTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnGuardarConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDarBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConsultarCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConsultarNoControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConsultarTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtConsultarCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtConsultarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtConsultarApaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConsultarPlantel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtConsultarAmaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtConsultarModalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtConsultarSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtConsultarCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 10, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblConsultarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCorregirFotoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnActualizar)
                        .addComponent(btnGuardarConsultas)
                        .addComponent(btnEditar)
                        .addComponent(btnDarBaja)
                        .addComponent(btnConsultarCancelar)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Baja Alumnos", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtConsultarNoControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarNoControlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarNoControlActionPerformed

    private void txtConsultarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarNombreActionPerformed

    private void txtConsultarApaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarApaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarApaternoActionPerformed

    private void txtConsultarAmaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarAmaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarAmaternoActionPerformed

    private void txtConsultarSemestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarSemestreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarSemestreActionPerformed

    private void txtConsultarTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarTelefonoActionPerformed

    private void txtConsultarCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarCorreoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        operacion="editar";
        if(!txtConsultarNoControl.getText().equals("")){
        habilitar();
         lblCorregirFotoConsulta.setText("Hacer Click para Corregir esta Foto");
        
    }
    }//GEN-LAST:event_btnEditarActionPerformed
    
    private void btnConsultarCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarCancelarActionPerformed
 deshabilitar();
 lblCorregirFotoConsulta.setText("");
    }//GEN-LAST:event_btnConsultarCancelarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(!txtBuscar.getText().equals("")){
        buscar();
        }else{
        mostrarAlumnos();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed
    
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
mostrarAlumnos();
limpiarConsultas();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnGuardarConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarConsultasActionPerformed
        // En este metodo implementamos la funcion del boton guardar:
        
        Lalumnos a=new Lalumnos();
        validarConsultas();
        if(validar){ 
        a.setAlumnoId(lblId.getText());
        a.setNoControl(txtConsultarNoControl.getText());
        a.setNombre(txtConsultarNombre.getText());
        a.setaPaterno(txtConsultarApaterno.getText());
        a.setaMaterno(txtConsultarAmaterno.getText());
        a.setSemestre(Integer.parseInt(txtConsultarSemestre.getText()));
        a.setTelefono(txtConsultarTelefono.getText());
        a.setEmail(txtConsultarCorreo.getText());
        a.setCarreraId(obtenerCarreraId(txtConsultarPlantel.getText(),txtConsultarModalidad.getText(),txtConsultarCarrera.getText()));
        da.EditarAlumno(a);            
        mostrarAlumnos();
        deshabilitar();
        
        }else{
        JOptionPane.showMessageDialog(null, "Favor de verificar los datos","Error",JOptionPane.ERROR_MESSAGE);
        validar=true;
        validarCorreo=true;
        }
    }//GEN-LAST:event_btnGuardarConsultasActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(!txtBuscar.getText().equals("")){
            buscar();
        }else{
             mostrarAlumnos();
            }
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
    if(comboBuscar.getSelectedItem().toString().equals("Buscar por No.Control:") ||comboBuscar.getSelectedItem().toString().equals("Buscar por Carrera:") ){
    char keyChar = evt.getKeyChar();
    if (Character.isLowerCase(keyChar)) {
      evt.setKeyChar(Character.toUpperCase(keyChar));
    }
    }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaActionPerformed
        // TODO add your handling code here:
     int i=JOptionPane.showConfirmDialog(null,"Desea dar de baja a este alumno?","Confirmación",JOptionPane.WARNING_MESSAGE);
        
        if(i==JOptionPane.YES_OPTION){
        da.bajaAlumno(lblId.getText());
        limpiarConsultas();
        mostrarAlumnos();
        }
        
    }//GEN-LAST:event_btnDarBajaActionPerformed

    private void tblConsultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConsultarMouseClicked
        
        int fila = tblConsultar.rowAtPoint(evt.getPoint());
        consultarFoto(tblConsultar.getValueAt(fila,1).toString());
        lblId.setText(tblConsultar.getValueAt(fila,0).toString());
        ResultSet rs=da.visualizarAlumno(tblConsultar.getValueAt(fila,0).toString());
        String datos[]=new String[10];
        String foto;
        try{
        if(rs.next()){
            
        txtConsultarNoControl.setText(rs.getString("no_control"));
        txtConsultarNombre.setText(rs.getString("nombre"));
        txtConsultarApaterno.setText(rs.getString("apellidoP"));
        txtConsultarAmaterno.setText(rs.getString("apellidoM"));
        txtConsultarSemestre.setText(rs.getString("semestre"));
        txtConsultarTelefono.setText(rs.getString("telefono"));
        txtConsultarCorreo.setText(rs.getString("email"));
        txtConsultarCarrera.setText(rs.getString("nombre_carrera"));
        txtConsultarPlantel.setText(rs.getString("plantel"));
        txtConsultarModalidad.setText(rs.getString("modalidad"));
        }
        
        }catch(SQLException e){
        System.out.println("Error");
        }
    }//GEN-LAST:event_tblConsultarMouseClicked

    private void txtConsultarPlantelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarPlantelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarPlantelActionPerformed

    private void txtConsultarModalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarModalidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarModalidadActionPerformed

    private void txtConsultarCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarCarreraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarCarreraActionPerformed

    private void comboCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCarreraActionPerformed

    }//GEN-LAST:event_comboCarreraActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        limpiar();
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void comboModalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboModalidadActionPerformed

    }//GEN-LAST:event_comboModalidadActionPerformed

    private void comboModalidadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboModalidadItemStateChanged
        if(comboPlantel.getSelectedIndex()!=-1){
            try{
            String plantel=comboPlantel.getSelectedItem().toString();
            String modalidad1=comboModalidad.getSelectedItem().toString();
            obtenerCarreras(plantel,modalidad1);
            }catch(Exception e){
            }
        }
    }//GEN-LAST:event_comboModalidadItemStateChanged

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if(validarCampos()==0){
            String plantel=comboPlantel.getSelectedItem().toString();
            String modalidad2=comboModalidad.getSelectedItem().toString();
            String carrera=comboCarrera.getSelectedItem().toString();
            int carreraId=seleccionCarrera(plantel,modalidad2,carrera);
            System.out.println(carreraId);
            nControl=txtNoControl.getText();
            int semestre=Integer.parseInt(txtSemestre.getText());
            Lalumnos u=new Lalumnos();
            u.setAlumnoId(generarIdAlumno());
            u.setNoControl(nControl);
            u.setNombre(txtNombre.getText());
            u.setaPaterno(txtApaterno.getText());
            u.setaMaterno(txtAmaterno.getText());
            u.setSemestre(semestre);
            try {
                // TODO add your handling code here:
                BufferedImage img = ImageIO.read(new File(ruta.toString()));
                String image_string = encodeToString(img);
                u.setFoto(image_string);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al Cargar Foto","ERROR",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmAltaBajaAlumnos.class.getName()).log(Level.SEVERE, null, ex);
            }

            u.setTelefono(txtTelefono.getText());
            u.setEmail(txtEmail.getText());
            u.setCarreraId(carreraId);
            u.setEstado("ALTA");
            boolean r=da.agregarAlumno(u);
            mostrarAlumnos();
            if(r){
                limpiar();
               
            }
        }
          mostrarAlumnos();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void comboPlantelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPlantelActionPerformed

    }//GEN-LAST:event_comboPlantelActionPerformed

    private void comboPlantelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPlantelItemStateChanged
        if(comboModalidad.getSelectedIndex()!=-1){
            String plantel=comboPlantel.getSelectedItem().toString();
            String modalidad3=comboModalidad.getSelectedItem().toString();
            obtenerCarreras(plantel,modalidad3);
        }
    }//GEN-LAST:event_comboPlantelItemStateChanged

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        Pattern patron = Pattern.compile(patronEmail);
        String email=txtEmail.getText();
        Matcher matcher = patron.matcher(email);

        if(!email.equals("")){

            if (matcher.matches()) {
                lblValidarEmail.setForeground(Color.GREEN);
                lblValidarEmail.setText("Correo Valido");
            }
            else {
                lblValidarEmail.setForeground(Color.RED);
                lblValidarEmail.setText("Ingrese un correo Valido");

            }

        }else{
            lblValidarEmail.setText("");
        }

    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyReleased
        int k=(int) evt.getKeyChar();
        if(k>0 && k<7 || k>10 && k<48 || k>57 && k<255){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Solo se pueden ingresar numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtTelefono.setText("");

        }
        if(txtTelefono.getText().length()>10){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(10)","Error",JOptionPane.ERROR_MESSAGE);
            txtTelefono.setText("");

        }
    }//GEN-LAST:event_txtTelefonoKeyReleased

    private void txtSemestreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSemestreKeyReleased
        int k=evt.getKeyChar();
        if(k>0 && k<7 || k>10 && k<48 || k>57 && k<255){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Solo se pueden ingresar numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtSemestre.setText("");
        }else{
            int semestre=Integer.parseInt(txtSemestre.getText());
            if(semestre < 1 || semestre > 13){
                JOptionPane.showMessageDialog(null,"Semestre Invalido","Error",JOptionPane.ERROR_MESSAGE);
                txtSemestre.setText("");
            }
        }
    }//GEN-LAST:event_txtSemestreKeyReleased

    private void txtSemestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemestreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemestreActionPerformed

    private void txtAmaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmaternoKeyReleased

        int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtAmaterno.setText("");

        }

        if(txtAmaterno.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtAmaterno.setText("");
        }

    }//GEN-LAST:event_txtAmaternoKeyReleased

    private void txtApaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApaternoKeyReleased
        int k=(int) evt.getKeyChar();
        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtApaterno.setText("");

        }

        if(txtApaterno.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtApaterno.setText("");
        }

    }//GEN-LAST:event_txtApaternoKeyReleased

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtNombre.setText("");

        }

        if(txtNombre.getText().length()>=31){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(30)","Error",JOptionPane.ERROR_MESSAGE);
            txtNombre.setText("");
        }

    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtNoControlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoControlKeyTyped

        char keyChar = evt.getKeyChar();
        if (Character.isLowerCase(keyChar)) {
            evt.setKeyChar(Character.toUpperCase(keyChar));

        }
    }//GEN-LAST:event_txtNoControlKeyTyped

    private void txtNoControlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoControlKeyReleased
        int k=(int) evt.getKeyChar();

        if(k<32 || k==65535 || k==8){
            //Nada
        }
        else if(k==32){
            JOptionPane.showMessageDialog(null,"No se permiten Espacios en este Campo","Error",JOptionPane.ERROR_MESSAGE);
            txtNoControl.setText("");
            cNoControl=0;
        }

        else if(k>32 && k < 48 || k>57 && k<65 || k>90 && k< 97 || k>122 && k<164 || k>165){

            JOptionPane.showMessageDialog(null,"No se permiten Estos Caracteres en este Campo \n (*,@,/,_,. ...etc.)","Error",JOptionPane.ERROR_MESSAGE);
            txtNoControl.setText("");
            cNoControl=0;
        }else{

            cNoControl=cNoControl+1;
            if(cNoControl >8){

                JOptionPane.showMessageDialog(null,"Numero de control no debe superar los 8 caracteres","Error",JOptionPane.ERROR_MESSAGE);
                txtNoControl.setText("");
                cNoControl=0;
            }
        }
    }//GEN-LAST:event_txtNoControlKeyReleased

    private void lblFotoAlumnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseExited
        efectoVolverFotoAlumno();
    }//GEN-LAST:event_lblFotoAlumnoMouseExited

    private void lblFotoAlumnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseEntered

        efectoSubirFotoAlumno();

    }//GEN-LAST:event_lblFotoAlumnoMouseEntered

    private void lblFotoAlumnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseClicked
        contadorCamara++;
        ImageIcon iconCamara=new ImageIcon(getClass().getResource("/Imagenes/camara.png"));
        String opciones[]={"Busqueda Automática","Subir una Foto","Tomar una Foto"};
        String resp = (String) JOptionPane.showInputDialog(this, "Seleccione una opción:", "Agregar Foto", JOptionPane.DEFAULT_OPTION, iconCamara, opciones, opciones[0]);
           switch (resp) {
               case "Tomar una Foto":
                   nControl=txtNoControl.getText();
                   if(nControl.equals("")){
                       JOptionPane.showMessageDialog(this,"Por favor termine de ingresar sus datos¡","Formulario Incompleto",JOptionPane.ERROR_MESSAGE);
                   }else{
                       String direccion="C:\\BIBIOTEC\\FotoAlumnos\\"+nControl+".jpg";
                       ruta=new File(direccion);
                       camara.setNumeroControl(nControl);
                       try{
                       SwingUtilities.invokeLater(camara);
                       if(camara.isValidar()){
                           colocarFoto(direccion);
                       }
                       lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
                       }catch(Exception e){
                    
                       }
                   }      break;
               case "Subir una Foto":
                   int resultado;
                   
                   FileNameExtensionFilter filtro=new FileNameExtensionFilter("JPG","PNG","GIF","ICO","jpg","png","gif","ico");
                   Buscador.JFCImg.setFileFilter(filtro);
                   resultado=Buscador.JFCImg.showOpenDialog(null);
                   if(JFileChooser.APPROVE_OPTION==resultado){
                       ruta=Buscador.JFCImg.getSelectedFile();
                       
                       try{
                           ImageIcon imgIcon=new ImageIcon(ruta.toString());
                           Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblFotoAlumno.getWidth(),lblFotoAlumno.getHeight(), Image.SCALE_DEFAULT));
                           lblFotoAlumno.setIcon(icono);
                           camara.setValidar(true);
                           lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
                       }catch(Exception e){
                           JOptionPane.showMessageDialog(null,"Error al Abrir Imagen");
                       }
                       
                   }      break;
               case "Busqueda Automática":
                   nControl=txtNoControl.getText();
                   if(nControl.equals("")){
                       JOptionPane.showMessageDialog(this,"Por favor termine de ingresar sus datos¡","Formulario Incompleto",JOptionPane.ERROR_MESSAGE);
                   }else{
                       try{
                           String direccion="C:\\BIBIOTEC\\FotoAlumnos\\"+nControl+".jpg";
                           ruta=new File(direccion);
                           if(ruta.exists()){
                               ImageIcon imgIcon=new ImageIcon(direccion);
                               Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblFotoAlumno.getWidth(),lblFotoAlumno.getHeight(), Image.SCALE_DEFAULT));
                               lblFotoAlumno.setIcon(icono);
                               camara.setValidar(true);
                               lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
                           }else{
                               JOptionPane.showMessageDialog(null,"Imagen no encontrada","ERROR",JOptionPane.ERROR_MESSAGE);
                           }
                       }catch(HeadlessException e){
                           JOptionPane.showMessageDialog(null,"Error al Abrir Imagen","ERROR",JOptionPane.ERROR_MESSAGE);
                       }
                       
                   }      break;
               default:
                   lblCorregirFoto.setText(" ");                                      
                   break;
           }

    }//GEN-LAST:event_lblFotoAlumnoMouseClicked

    private void lblFotoAlumnoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoAlumnoMouseDragged

    }//GEN-LAST:event_lblFotoAlumnoMouseDragged

    private void txtConsultarNoControlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarNoControlKeyTyped
        // TODO add your handling code here:
        char keyChar = evt.getKeyChar();
        teclado=true;
        if (Character.isLowerCase(keyChar)) {
            evt.setKeyChar(Character.toUpperCase(keyChar));

        }
    }//GEN-LAST:event_txtConsultarNoControlKeyTyped

    private void txtConsultarNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarNombreKeyReleased
        // TODO add your handling code here:
           int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
          

        }

        
    }//GEN-LAST:event_txtConsultarNombreKeyReleased

    private void txtConsultarApaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarApaternoKeyReleased
        // TODO add your handling code here:
        int k=(int) evt.getKeyChar();
        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            

        }

        
    }//GEN-LAST:event_txtConsultarApaternoKeyReleased

    private void txtConsultarAmaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarAmaternoKeyReleased
        // TODO add your handling code here:
        int k=(int) evt.getKeyChar();

        if(k==65535){

        }
        else if(k>0 && k<7 || k>10 && k<32 || k>32 && k<65 || k>90 && k<97 || k>122 && k>164 || k>255 && k<165){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"No se pueden introducir numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtAmaterno.setText("");

        }
    }//GEN-LAST:event_txtConsultarAmaternoKeyReleased

    private void txtConsultarSemestreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarSemestreKeyReleased
        // TODO add your handling code here:
         int k=evt.getKeyChar();
        if(k>0 && k<7 || k>10 && k<48 || k>57 && k<255){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Solo se pueden ingresar numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtSemestre.setText("");
        }else{
            int semestre=Integer.parseInt(txtSemestre.getText());
            if(semestre < 1 || semestre > 13){
                JOptionPane.showMessageDialog(null,"Semestre Invalido","Error",JOptionPane.ERROR_MESSAGE);
                txtSemestre.setText("");
            }
        }

    }//GEN-LAST:event_txtConsultarSemestreKeyReleased

    private void txtConsultarTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarTelefonoKeyReleased
        // TODO add your handling code here:
        int k=(int) evt.getKeyChar();
        if(k>0 && k<7 || k>10 && k<48 || k>57 && k<255){

            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Solo se pueden ingresar numeros en este campo","Error",JOptionPane.ERROR_MESSAGE);
            txtTelefono.setText("");

        }
        if(txtTelefono.getText().length()>10){
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null,"Ha exedido el numero de caracteres(10)","Error",JOptionPane.ERROR_MESSAGE);
            txtTelefono.setText("");

        }
    }//GEN-LAST:event_txtConsultarTelefonoKeyReleased

    private void txtConsultarCorreoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultarCorreoKeyReleased
       
    }//GEN-LAST:event_txtConsultarCorreoKeyReleased

    private void lblConsultarFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConsultarFotoMouseClicked
        // TODO add your handling code here:
        if(!lblCorregirFotoConsulta.getText().equals("")){
        contadorCamara++;
        ImageIcon iconCamara=new ImageIcon(getClass().getResource("/Imagenes/camara.png"));
        String opciones[]={"Busqueda Automática","Subir una Foto","Tomar una Foto"};
        String resp = (String) JOptionPane.showInputDialog(this, "Seleccione una opción:", "Agregar Foto", JOptionPane.DEFAULT_OPTION, iconCamara, opciones, opciones[0]);
            switch (resp) {
                case "Tomar una Foto":
                    nControl=txtConsultarNoControl.getText();
                    if(nControl.equals("")){
                        JOptionPane.showMessageDialog(this,"Por favor termine de ingresar sus datos¡","Formulario Incompleto",JOptionPane.ERROR_MESSAGE);
                    }else{
                        String direccion="C:\\BIBIOTEC\\FotoAlumnos\\"+nControl+".jpg";
                        ruta=new File(direccion);
                        camara.setNumeroControl(nControl);
                        SwingUtilities.invokeLater(camara);
                        if(camara.isValidar()){
                            try{
                                ImageIcon imgIcon=new ImageIcon(direccion);
                                Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblConsultarFoto.getWidth(),lblConsultarFoto.getHeight(), Image.SCALE_DEFAULT));
                                lblConsultarFoto.setIcon(icono);
                                
                                
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null,"Error al Abrir Imagen");
                            }
                        }
                        
                    }       break;
                case "Subir una Foto":
                    int resultado;
                    
                    FileNameExtensionFilter filtro=new FileNameExtensionFilter("JPG","PNG","GIF","ICO","jpg","png","gif","ico");
                    Buscador.JFCImg.setFileFilter(filtro);
                    resultado=Buscador.JFCImg.showOpenDialog(null);
                    if(JFileChooser.APPROVE_OPTION==resultado){
                        ruta=Buscador.JFCImg.getSelectedFile();
                        
                        try{
                            ImageIcon imgIcon=new ImageIcon(ruta.toString());
                            Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblConsultarFoto.getWidth(),lblConsultarFoto.getHeight(), Image.SCALE_DEFAULT));
                            lblConsultarFoto.setIcon(icono);
                            
                            
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null,"Error al Abrir Imagen");
                        }
                        
                    }       break;
                case "Busqueda Automática":
                    nControl=txtNoControl.getText();
                    if(nControl.equals("")){
                        JOptionPane.showMessageDialog(this,"Por favor termine de ingresar sus datos¡","Formulario Incompleto",JOptionPane.ERROR_MESSAGE);
                    }else{
                        try{
                            String direccion="C:\\BIBIOTEC\\FotoAlumnos\\"+nControl+".jpg";
                            ruta=new File(direccion);
                            if(ruta.exists()){
                                colocarFoto(direccion);
                                
                            }else{
                                JOptionPane.showMessageDialog(null,"Imagen no encontrada","ERROR",JOptionPane.ERROR_MESSAGE);
                            }
                        }catch(HeadlessException e){
                            JOptionPane.showMessageDialog(null,"Error al Abrir Imagen","ERROR",JOptionPane.ERROR_MESSAGE);
                        }
                        
                    }       break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_lblConsultarFotoMouseClicked

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        if(!txtBuscar.getText().equals("")){
        buscar();
        }else{
        mostrarAlumnos();
        }
    }//GEN-LAST:event_txtBuscarKeyReleased
    public void consultarAlumno(){
         
        
    
    }
    public int validarCampos(){
     int contador=0;
    try{
    String noControl=txtNoControl.getText();
    String sql="SELECT estadoAlumno FROM alumno WHERE no_control="+'"'+noControl+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            if(rst.next()){
                String estado=rst.getString("estadoAlumno");
               if(!estado.equals("BAJA")){
                JOptionPane.showMessageDialog(null, "El Alumno ya se encuentra Registrado!", "ERROR", JOptionPane.ERROR_MESSAGE);
            limpiar();
            contador++;
    } else{
                
    if(txtNoControl.getText().trim().compareTo("")==0){
    
    JOptionPane.showMessageDialog(null, "Ingrese un Numero de Control Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    
               
            }
            
    if(txtNombre.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Nombre esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    if(txtApaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Paterno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     contador++;                   
    }
    if(txtAmaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Materno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(txtSemestre.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "Ingrese un Semestre Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    
    
    if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(comboModalidad.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado una Modalidad", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(comboCarrera.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado una Carrera", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
    if(comboPlantel.getSelectedItem().toString().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha seleccionado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
            
            
            }
    }catch(SQLException e){
    JOptionPane.showMessageDialog(null, "Error al Validar Existencia del Alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    contador++;
    }
   
       
   
    return contador;
    }
    public static String encodeToString(BufferedImage image) {
        String imageString = null;
        ByteArrayOutputStream bos = new ByteArrayOutputStream();

        try {
            ImageIO.write(image, "jpg", bos);
            byte[] imageBytes = bos.toByteArray();

            BASE64Encoder encoder = new BASE64Encoder();
            imageString = encoder.encode(imageBytes);

            bos.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null,"Error al convertir imagen a String "+e);
        }
        return imageString;
    }
    
    

    public static BufferedImage decodeToImage(String imageString) {

        BufferedImage image = null;
        byte[] imageByte;
        try {
            BASE64Decoder decoder = new BASE64Decoder();
            imageByte = decoder.decodeBuffer(imageString);
            try (ByteArrayInputStream bis = new ByteArrayInputStream(imageByte)) {
                image = ImageIO.read(bis);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null,"Error al convertir String a Imagen "+e);
        }
        return image;
    }
   
    
    public String generarIdAlumno(){
    String idAlumno;
    Calendar fecha=Calendar.getInstance();
    int a=fecha.get(Calendar.YEAR)-2000,m=fecha.get(Calendar.MONTH)+1,d=fecha.get(Calendar.DATE),h=fecha.get(Calendar.HOUR),
    mn=fecha.get(Calendar.MINUTE),s=fecha.get(Calendar.SECOND);
    String ano=Integer.toString(a),mes=Integer.toString(m),dia=Integer.toString(d),hora=Integer.toString(h),
    minuto=Integer.toString(mn),segundo=Integer.toString(s);
    if(m<10){
     mes="0"+mes;
    }
    if(d<10){
     dia="0"+dia;   
    }
    if(h<10){
     hora="0"+hora;   
    }
    if(mn<10){
     minuto="0"+minuto;   
    }
    if(s<10){
     segundo="0"+segundo;   
    }
    idAlumno=ano+mes+dia+hora+minuto+segundo;
    return idAlumno;
    }
    
    public void limpiarConsultas(){
        lblCorregirFotoConsulta.setText("");
        txtConsultarNoControl.setText("");
        txtConsultarNombre.setText("");
        txtConsultarApaterno.setText("");
        txtConsultarAmaterno.setText("");
        txtConsultarSemestre.setText("");
        txtConsultarTelefono.setText("");
        txtConsultarCorreo.setText("");
        txtConsultarPlantel.setText("");
        txtConsultarModalidad.setText("");
        txtConsultarCarrera.setText("");
        ImageIcon iconVacio=new ImageIcon(getClass().getResource("/Imagenes/vacio.png"));
        lblConsultarFoto.setIcon(iconVacio);
    }
    public void validarConsultas(){
       
    try{
    
    String sql="SELECT carrera_id FROM Carrera WHERE plantel="+'"'+txtConsultarPlantel.getText()+'"'+" AND modalidad="+'"'+txtConsultarModalidad.getText()+'"'+" AND nombre_carrera="+'"'+txtConsultarCarrera.getText()+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
           if(!rst.next()){
            JOptionPane.showMessageDialog(null, "La carrera que usted ha ingresado no existe!,favor de verificar los datos (plantel,modalidad,Carrera)", "ERROR", JOptionPane.ERROR_MESSAGE);
            limpiar();
            validar=false;
    } else{ 
                
    if(txtConsultarNoControl.getText().trim().compareTo("")==0){
    
    JOptionPane.showMessageDialog(null, "Ingrese un Numero de Control Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
     validar=false;                   
    }   
    if(txtConsultarNombre.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Nombre esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     validar=false;                    
    }
    if(txtConsultarApaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Paterno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
     validar=false;                    
    }
    if(txtConsultarAmaterno.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "El campo Apellido Materno esta Vacío", "Advertencia", JOptionPane.ERROR_MESSAGE);
    validar=false; 
    }
    if(txtConsultarSemestre.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "Ingrese un Semestre Valido", "Advertencia", JOptionPane.ERROR_MESSAGE);
    validar=false; 
    }
    
    
    if(txtConsultarPlantel.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha ingresado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    validar=false; 
    }
    if(txtConsultarModalidad.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha ingresado una Modalidad", "Advertencia", JOptionPane.ERROR_MESSAGE);
    validar=false; 
    }
    if(txtConsultarCarrera.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha ingresado una Carrera", "Advertencia", JOptionPane.ERROR_MESSAGE);
    validar=false; 
    }
    if(txtConsultarPlantel.getText().trim().compareTo("")==0){
        
    JOptionPane.showMessageDialog(null, "No ha Ingresado el plantel del alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    validar=false; 
    }
     }       
            
            
    }catch(SQLException e){
    JOptionPane.showMessageDialog(null, "Error al Validar Existencia del Alumno", "Advertencia", JOptionPane.ERROR_MESSAGE);
    validar=false; 
    }
   
       
   
    
    }
    public void limpiar() {
        txtNoControl.setText("");
        txtNombre.setText("");
        txtApaterno.setText("");
        txtAmaterno.setText("");
        txtSemestre.setText("");
        txtTelefono.setText("");
        txtEmail.setText("");
        lblValidarEmail.setText("");
        lblCorregirFoto.setText("");
        camara.setValidar(false);
        efectoVolverFotoAlumno();
        comboCarrera.removeAllItems();
        comboModalidad.setSelectedIndex(-1);
        comboModalidad.setSelectedItem(-1);
        comboPlantel.setSelectedIndex(-1);
        comboPlantel.setSelectedItem(-1);
        txtNoControl.requestFocusInWindow(); 

        
    }
    public void deshabilitar(){
    txtConsultarNoControl.setEnabled(false);
    txtConsultarNombre.setEnabled(false);
    txtConsultarApaterno.setEnabled(false);
    txtConsultarAmaterno.setEnabled(false);
    txtConsultarSemestre.setEnabled(false);
    txtConsultarTelefono.setEnabled(false);
    txtConsultarCorreo.setEnabled(false);
    txtConsultarPlantel.setEnabled(false);
    txtConsultarModalidad.setEnabled(false);
    txtConsultarCarrera.setEnabled(false);
    btnGuardarConsultas.setEnabled(false);
    btnConsultarCancelar.setEnabled(false);
    }
    public void habilitar(){
    txtConsultarNoControl.setEnabled(true);
    txtConsultarNombre.setEnabled(true);
    txtConsultarApaterno.setEnabled(true);
    txtConsultarAmaterno.setEnabled(true);
    txtConsultarSemestre.setEnabled(true);
    txtConsultarTelefono.setEnabled(true);
    txtConsultarCorreo.setEnabled(true);
    txtConsultarPlantel.setEnabled(true);
    txtConsultarModalidad.setEnabled(true);
    txtConsultarCarrera.setEnabled(true);
    btnGuardarConsultas.setEnabled(true);
    btnConsultarCancelar.setEnabled(true);
    }
  
    public void obtenerCarreras(String plantel,String modalidad){
             
        
        try{
            
            DefaultComboBoxModel modelo=new DefaultComboBoxModel();  
            String datos[]=new String[2];
            String sql="SELECT nombre_carrera,estado FROM Carrera WHERE plantel="+'"'+plantel+'"'+" AND modalidad="+'"'+modalidad+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
            
            while(rst.next()){
            
            datos[0]=rst.getString("nombre_carrera");
            datos[1]=rst.getString("estado");
            
            if(!datos[1].equals("BAJA")){
            String carrera=datos[0];
            modelo.addElement(carrera);
            }
            }
            comboCarrera.setModel(modelo);
            
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de Datos","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    

    }
    
    public int obtenerCarreraId(String plantel,String modalidad,String nombreCarrera){
        int carreraId=0;
    try{
            String sql="SELECT carrera_id,estado FROM Carrera WHERE plantel="+'"'+plantel+'"'+" AND modalidad="+'"'+modalidad+'"'+"AND nombre_carrera="+'"'+nombreCarrera+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            
           if(rst.next()){
            
            int datos=rst.getInt("carrera_id");
            String estado=rst.getString("estado");
           
            if(!estado.equals("BAJA")){
            carreraId=datos;
            validar=true;
            
            }
            
            
            }else{
           JOptionPane.showMessageDialog(null,"Consulta Invalida","Error",JOptionPane.ERROR_MESSAGE);
           JOptionPane.showMessageDialog(null,"Favor de ingresar una carrera valida","Error",JOptionPane.ERROR_MESSAGE);
           
           validar=false;
           }
    }catch(SQLException e){
    
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de datos","Error",JOptionPane.ERROR_MESSAGE);
        validar=false;
    }
    validar=true;    
    return carreraId;   
     
    }
    
    public int seleccionCarrera(String plantel,String modalidad,String carrera){
        int resultado;
        
        try{
        
        String sql="SELECT carrera_id FROM Carrera WHERE plantel="+'"'+plantel+'"'+" AND modalidad="+'"'+modalidad+'"'+" AND nombre_carrera="+'"'+carrera+'"';
            PreparedStatement pst= (PreparedStatement) cn.prepareStatement(sql);
            ResultSet rst = pst.executeQuery();
            int carreraId = 0;
            while(rst.next()){
            carreraId=rst.getInt("carrera_id");
            }
          resultado=carreraId;
        }catch(SQLException e){
        JOptionPane.showMessageDialog(null,"Error al Consultar la Base de Datos","ERROR",JOptionPane.ERROR_MESSAGE);
         resultado=0;
        }
        return resultado;
    }
    
    public void colocarFoto(String direccion){

    try{                           
                           ruta=new File(direccion);
                           if(ruta.exists()){
                               ImageIcon imgIcon=new ImageIcon(direccion);
                               Icon icono=new  ImageIcon(imgIcon.getImage().getScaledInstance(lblFotoAlumno.getWidth(),lblFotoAlumno.getHeight(), Image.SCALE_DEFAULT));
                               lblFotoAlumno.setIcon(icono);
                               lblCorregirFoto.setText("Hacer Click para Corregir esta Foto");
                               camara.setValidar(true);
                            
                           }else{
                               JOptionPane.showMessageDialog(null,"Imagen no encontrada","ERROR",JOptionPane.ERROR_MESSAGE);
                           }
                       }catch(HeadlessException e){
                           JOptionPane.showMessageDialog(null,"Error al Abrir Imagen","ERROR",JOptionPane.ERROR_MESSAGE);
                       }


}
    public void efectoSubirFotoAlumno(){
        
        if(!camara.isValidar()){
        ImageIcon iconVacio2=new ImageIcon(getClass().getResource("/Imagenes/vacio2.png"));
        lblFotoAlumno.setIcon(iconVacio2);
        
        }
    }
    
        
    public void efectoVolverFotoAlumno(){
    
    if(!camara.isValidar()){    
    ImageIcon iconVacio=new ImageIcon(getClass().getResource("/Imagenes/vacio.png"));
        lblFotoAlumno.setIcon(iconVacio);
    }
    }
    public void consultarFoto(String noCont) {
        BufferedImage img;
        String sql = "SELECT foto FROM Alumno WHERE no_control='" +noCont+ "'";
        String imagen_string = null;

        try {

            Statement s = cn.createStatement();
            ResultSet rs = s.executeQuery(sql);
            while (rs.next()) {
                imagen_string = rs.getString("foto");
                            }
            if (imagen_string == null) {
                JOptionPane.showMessageDialog(null,"No se encontro Foto del Alumno","ERROR",JOptionPane.ERROR_MESSAGE);
            } else {
                img = decodeToImage(imagen_string);
                ImageIcon icon = new ImageIcon(img);
                Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblConsultarFoto.getWidth(), lblConsultarFoto.getHeight(), Image.SCALE_DEFAULT));
                lblConsultarFoto.setText(null);
                lblConsultarFoto.setIcon(icono);
            }

        } catch (SQLException ex) {
            Logger.getLogger(FrmAltaBajaAlumnos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
      public void mostrarAlumnos(){
          
       DefaultTableModel modelo=da.mostrarAlumnos();
       lblTotal.setText("Se encontraron: "+Integer.toString(da.getTotalRegistros())+" resultados");
       tblConsultar.setModel(modelo);
       BufferedImage img = null;      
    
    }
    //Este metodo nos permitira extraer el atributo a localizar del comboBuscar para poder hacer la consulta a la base de datos.
    public String extraerCombo(){
    String consulta=null,combo;
    
    combo=comboBuscar.getSelectedItem().toString();
    
    if(combo.equals("Buscar por Id:")){
    consulta="alumno_id";
    }if(combo.equals("Buscar por No.Control:")){
    consulta="no_control";
    }    
    if(combo.equals("Buscar por Nombre:")){
     consulta="nombre";   
    }
    if(combo.equals("Buscar por A.Parerno:")){
     consulta="apellidoP";      
    }
    if(combo.equals("Buscar por A.Materno:")){
    consulta="apellidoM";
    }
    if(combo.equals("Buscar por Carrera:")){
    consulta="nombre_carrera";
    }
    return consulta;
    }
    public String extraerCarrera(String carrera){
     String c="";
     if(carrera.equals("SISTEMAS")){
     c="INGENIERIA EN SISTEMAS COMPUTACIONALES";
     }
     if(carrera.equals("ALIMENTOS")){
         c="INGENIERIA INDUSTRIAS ALIMENTARIAS";
     }
     if(carrera.equals("AMBIENTAL")){
         c="INGENIERIA AMBIENTAL";
     }
     if(carrera.equals("INDUSTRIAL")){
         c="INGENIERIA INDUSTRIAL";
     }
     if(carrera.equals("ADMINISTRACION")){
      c="INGENIERIA EN ADMINISTRACION";
     }
     if(carrera.equals("TIC'S")){
     c="INGENIERIA EN TECNOLOGIAS DE LA INFORMACION Y COMUNICACIONES";
     }
    return c;
    }
    public void buscar(){
       
       String atributo;
       if(comboBuscar.getSelectedItem().toString().equals("Buscar por Carrera:")){
       atributo=extraerCarrera(txtBuscar.getText());
       }else{
       atributo=txtBuscar.getText();
       }
       String consulta=extraerCombo();
       DefaultTableModel modelo=da.consultar(consulta, atributo);
       tblConsultar.setModel(modelo);
       lblTotal.setText("Se encontraron: "+Integer.toString(da.getTotalRegistros())+" resultados");
        
    }
    
    public ResultSet visualizarAlumno(String noControl){
    ResultSet rst=null;
    try{
        
        java.sql.PreparedStatement pst=cn.prepareStatement("Select no_control,nombre,apellidoP,apellidoM,foto,telefono,email,semestre,nombre_carrera,modalidad from Alumno inner join Carrera on Alumno.carrera_id=Carrera.carrera_id WHERE alumno_id='"+noControl+"'");
        rst=pst.executeQuery();
    }catch(SQLException ex){
    JOptionPane.showMessageDialog(null,"Error de Consulta","ERROR",JOptionPane.ERROR_MESSAGE);
    
    }
    return rst;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsultarCancelar;
    private javax.swing.JButton btnDarBaja;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnGuardarConsultas;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboBuscar;
    private javax.swing.JComboBox<String> comboCarrera;
    private javax.swing.JComboBox<String> comboModalidad;
    private javax.swing.JComboBox<String> comboPlantel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblConsultarFoto;
    private javax.swing.JLabel lblCorregirFoto;
    private javax.swing.JLabel lblCorregirFotoConsulta;
    private javax.swing.JLabel lblFotoAlumno;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblValidarEmail;
    private javax.swing.JTable tblConsultar;
    private javax.swing.JTextField txtAmaterno;
    private javax.swing.JTextField txtApaterno;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtConsultarAmaterno;
    private javax.swing.JTextField txtConsultarApaterno;
    private javax.swing.JTextField txtConsultarCarrera;
    private javax.swing.JTextField txtConsultarCorreo;
    private javax.swing.JTextField txtConsultarModalidad;
    private javax.swing.JTextField txtConsultarNoControl;
    private javax.swing.JTextField txtConsultarNombre;
    private javax.swing.JTextField txtConsultarPlantel;
    private javax.swing.JTextField txtConsultarSemestre;
    private javax.swing.JTextField txtConsultarTelefono;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNoControl;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSemestre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    
}
